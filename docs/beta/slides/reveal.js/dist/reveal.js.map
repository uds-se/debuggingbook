{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/overlay.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tallowedToPlay = true;\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\t\tthis.preventIframeAutoFocus = this.preventIframeAutoFocus.bind( this );\n\t\tthis.ensureMobileMediaPlaying = this.ensureMobileMediaPlaying.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tconst displayValue = this.Reveal.getConfig().display;\n\t\tif( displayValue.includes('!important') ) {\n\t\t\tconst value = displayValue.replace(/\\s*!important\\s*$/, '').trim();\n\t\t\tslide.style.setProperty('display', value, 'important');\n\t\t} else {\n\t\t\tslide.style.display = displayValue;\n\t\t}\n\n\t\t// Media and iframe elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tconst isIframe = element.tagName === 'IFRAME';\n\t\t\tif( !isIframe || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\n\t\t\t\tif( isIframe ) {\n\t\t\t\t\telement.addEventListener( 'load', this.preventIframeAutoFocus );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted || this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element ) {\n\n\t\t\tconst isSpeakerNotesWindow = this.Reveal.isSpeakerNotes();\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// In the speaker view we only auto-play muted media\n\t\t\t\t\tif( isSpeakerNotesWindow && !el.muted ) return;\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\tel.addEventListener( 'canplay', this.ensureMobileMediaPlaying );\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise\n\t\t\t\t\t\t\t.then( () => {\n\t\t\t\t\t\t\t\tthis.allowedToPlay = true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Don't play iframe content in the speaker view since we can't\n\t\t\t// guarantee that it's muted\n\t\t\tif( !isSpeakerNotesWindow ) {\n\n\t\t\t\t// Normal iframes\n\t\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t\t} );\n\n\t\t\t\t// Lazy loading iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Ensure that an HTMLMediaElement is playing on mobile devices.\n\t *\n\t * This is a workaround for a bug in mobile Safari where\n\t * the media fails to display if many videos are started\n\t * at the same moment. When this happens, Mobile Safari\n\t * reports the video is playing, and the current time\n\t * advances, but nothing is visible.\n\t *\n\t * @param {Event} event\n\t */\n\tensureMobileMediaPlaying( event ) {\n\n\t\tconst el = event.target;\n\n\t\t// Ignore this check incompatible browsers\n\t\tif( typeof el.getVideoPlaybackQuality !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout( () => {\n\n\t\t\tconst playing = el.paused === false;\n\t\t\tconst totalFrames = el.getVideoPlaybackQuality().totalVideoFrames;\n\n\t\t\tif( playing && totalFrames === 0 ) {\n\t\t\t\tel.load();\n\t\t\t\tel.play();\n\t\t\t}\n\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\t// Don't restart if media is already playing\n\t\t\tif( event.target.paused || event.target.ended ) {\n\t\t\t\tevent.target.currentTime = 0;\n\t\t\t\tconst promise = event.target.play();\n\n\t\t\t\tif( promise && typeof promise.catch === 'function' ) {\n\t\t\t\t\tpromise\n\t\t\t\t\t\t.then( () => {\n\t\t\t\t\t\t\tthis.allowedToPlay = true;\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( ( error ) => {\n\t\t\t\t\t\t\tif( error.name === 'NotAllowedError' ) {\n\t\t\t\t\t\t\t\tthis.allowedToPlay = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tthis.preventIframeAutoFocus( event );\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tel.removeEventListener( 'canplay', this.ensureMobileMediaPlaying );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.preventIframeAutoFocus );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether media playback is blocked by the browser. This\n\t * typically happens when media playback is initiated without a\n\t * direct user interaction.\n\t */\n\tisNotAllowedToPlay() {\n\n\t\treturn !this.allowedToPlay;\n\n\t}\n\n\t/**\n\t * Prevents iframes from automatically focusing themselves.\n\t *\n\t * @param {Event} event\n\t */\n\tpreventIframeAutoFocus( event ) {\n\n\t\tconst iframe = event.target;\n\n\t\tconsole.log(111)\n\n\t\tif( iframe && this.Reveal.getConfig().preventIframeAutoFocus ) {\n\n\t\t\tlet elapsed = 0;\n\t\t\tconst interval = 100;\n\t\t\tconst maxTime = 1000;\n\t\t\tconst checkFocus = () => {\n\t\t\t\tif( document.activeElement === iframe ) {\n\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t} else if( elapsed < maxTime ) {\n\t\t\t\t\telapsed += interval;\n\t\t\t\t\tsetTimeout( checkFocus, interval );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetTimeout( checkFocus, interval );\n\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear number\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// The previous background may refer to a DOM element that has\n\t\t// been removed after a presentation is synced & bgs are recreated\n\t\tif( this.previousBackground && !this.previousBackground.closest( 'body' ) ) {\n\t\t\tthis.previousBackground = null;\n\t\t}\n\n\t\tif( currentBackground && this.previousBackground ) {\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground.getAttribute( 'data-background-hash' );\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t\t\t// If multiple slides have the same background video, carry\n\t\t\t\t// the <video> element forward so that it plays continuously\n\t\t\t\t// across multiple slides\n\t\t\t\tconst currentVideo = currentBackground.querySelector( 'video' );\n\t\t\t\tconst previousVideo = this.previousBackground.querySelector( 'video' );\n\n\t\t\t\tif( currentVideo && previousVideo ) {\n\n\t\t\t\t\tconst currentVideoParent = currentVideo.parentNode;\n\t\t\t\t\tconst previousVideoParent = previousVideo.parentNode;\n\n\t\t\t\t\t// Swap the two videos\n\t\t\t\t\tpreviousVideoParent.appendChild( currentVideo );\n\t\t\t\t\tcurrentVideoParent.appendChild( previousVideo );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tconst backgroundChanged = currentBackground !== this.previousBackground;\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( backgroundChanged && this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( backgroundChanged && currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that;\n\t\t// 1. Both slides exist.\n\t\t// 2. Both slides are auto-animate targets with the same\n\t\t//    data-auto-animate-id value (including null if absent on both).\n\t\t// 3. data-auto-animate-restart isn't set on the physically latter\n\t\t//    slide (independent of slide direction).\n\t\tif( fromSlide && toSlide && fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t\t// Ensure the last trigger extends to the end of the page, otherwise\n\t\t// rounding errors can cause the last trigger to end at 0.999999...\n\t\tthis.slideTriggers[this.slideTriggers.length - 1].range[1] = 1;\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif( changedFragments.hidden.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif( changedFragments.shown.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmentshown',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 63, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isOverlayOpen() && ![\"Escape\", \"f\", \"c\", \"b\", \".\"].includes(event.key) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// C\n\t\t\telse if( keyCode === 67 && this.Reveal.isOverlayOpen() ) {\n\t\t\t\tthis.Reveal.closeOverlay();\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( ( keyCode === 63 || keyCode === 191 ) && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t\n\t\t// Enter to exit overview mode\n\t\telse if (keyCode === 13 && this.Reveal.overview.isActive()) {\n\t\t\tthis.Reveal.overview.deactivate();\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML id or data-id attribute\n\t\t\ttry {\n\t\t\t\tconst decodedName = decodeURIComponent( name );\n\t\t\t\tslide = (\n\t\t\t\t\tdocument.getElementById( decodedName ) ||\n\t\t\t\t\tdocument.querySelector( `[data-id=\"${decodedName}\"]` )\n\t\t\t\t).closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll, enterFullscreen } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\t\tthis.onEnterFullscreen = this.onEnterFullscreen.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\t\tthis.controlsFullscreen = queryAll( revealElement, '.enter-fullscreen' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = (\n\t\t\tconfig.controls &&\n\t\t\t(config.controls !== 'speaker-only' || this.Reveal.isSpeakerNotes())\n\t\t) ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser. Use touchend for it to be considered a valid\n\t\t// user interaction (so we're allowed to autoplay media).\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchend' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.addEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'touchend', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.removeEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\tconst isVerticalStack = this.Reveal.isVerticalSlide( currentSlide );\n\t\t\tconst hasVerticalSiblings = isVerticalStack &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement.querySelectorAll( ':scope > section' ).length > 1;\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalStack && hasVerticalSiblings ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\tonEnterFullscreen( event ) {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst viewport = this.Reveal.getViewportElement();\n\n\t\tenterFullscreen( config.embedded ? viewport : viewport.parentElement );\n\n\t}\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' overlay elements used\n * to preview iframes, images & videos.\n */\nexport default class Overlay {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onSlidesClicked = this.onSlidesClicked.bind( this );\n\n\t\tthis.iframeTriggerSelector = null;\n\t\tthis.mediaTriggerSelector = '[data-preview-image], [data-preview-video]';\n\n\t\tthis.stateProps = ['previewIframe', 'previewImage', 'previewVideo', 'previewFit'];\n\t\tthis.state = {};\n\n\t}\n\n\tupdate() {\n\n\t\t// Enable link previews globally\n\t\tif( this.Reveal.getConfig().previewLinks ) {\n\t\t\tthis.iframeTriggerSelector = 'a[href]:not([data-preview-link=false]), [data-preview-link]:not(a):not([data-preview-link=false])';\n\t\t}\n\t\t// Enable link previews for individual elements\n\t\telse {\n\t\t\tthis.iframeTriggerSelector = '[data-preview-link]:not([data-preview-link=false])';\n\t\t}\n\n\t\tconst hasLinkPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.iframeTriggerSelector ).length > 0;\n\t\tconst hasMediaPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.mediaTriggerSelector ).length > 0;\n\n\t\t// Only add the listener when there are previewable elements in the slides\n\t\tif( hasLinkPreviews || hasMediaPreviews ) {\n\t\t\tthis.Reveal.getSlidesElement().addEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getSlidesElement().removeEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\n\t}\n\n\tcreateOverlay( className ) {\n\n\t\tthis.dom = document.createElement( 'div' );\n\t\tthis.dom.classList.add( 'r-overlay' );\n\t\tthis.dom.classList.add( className );\n\n\t\tthis.viewport = document.createElement( 'div' );\n\t\tthis.viewport.classList.add( 'r-overlay-viewport' );\n\n\t\tthis.dom.appendChild( this.viewport );\n\t\tthis.Reveal.getRevealElement().appendChild( this.dom );\n\n\t}\n\n\t/**\n\t * Opens a lightbox that previews the target URL.\n\t *\n\t * @param {string} url - url for lightbox iframe src\n\t */\n\tpreviewIframe( url ) {\n\n\t\tthis.close();\n\n\t\tthis.state = { previewIframe: url };\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<a class=\"r-overlay-button r-overlay-external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\"><span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"r-overlay-content-inner\">\n\t\t\t\t\t<span class=\"r-overlay-error x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tthis.dom.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-external' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t}, false );\n\n\t\tthis.Reveal.dispatchEvent({ type: 'previewiframe', data: { url } });\n\n\t}\n\n\t/**\n\t * Opens a lightbox window that provides a larger view of the\n\t * given image/video.\n\t *\n\t * @param {string} url - url to the image/video to preview\n\t * @param {image|video} mediaType\n\t * @param {string} [fitMode] - the fit mode to use for the preview\n\t */\n\tpreviewMedia( url, mediaType, fitMode ) {\n\n\t\tif( mediaType !== 'image' && mediaType !== 'video' ) {\n\t\t\tconsole.warn( 'Please specify a valid media type to preview (image|video)' );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.close();\n\n\t\tfitMode = fitMode || 'scale-down';\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\t\tthis.dom.dataset.previewFit = fitMode;\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\"></div>`;\n\n\t\tconst contentElement = this.dom.querySelector( '.r-overlay-content' );\n\n\t\tif( mediaType === 'image' ) {\n\n\t\t\tthis.state = { previewImage: url, previewFit: fitMode }\n\n\t\t\tconst img = document.createElement( 'img', {} );\n\t\t\timg.src = url;\n\t\t\tcontentElement.appendChild( img );\n\n\t\t\timg.addEventListener( 'load', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\timg.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load image.</span>`\n\t\t\t}, false );\n\n\t\t\t// Hide image overlays when clicking outside the overlay\n\t\t\tthis.dom.style.cursor = 'zoom-out';\n\t\t\tthis.dom.addEventListener( 'click', ( event ) => {\n\t\t\t\tthis.close();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewimage', data: { url } });\n\n\t\t}\n\t\telse if( mediaType === 'video' ) {\n\n\t\t\tthis.state = { previewVideo: url, previewFit: fitMode }\n\n\t\t\tconst video = document.createElement( 'video' );\n\t\t\tvideo.autoplay = this.dom.dataset.previewAutoplay === 'false' ? false : true;\n\t\t\tvideo.controls = this.dom.dataset.previewControls === 'false' ? false : true;\n\t\t\tvideo.loop = this.dom.dataset.previewLoop === 'true' ? true : false;\n\t\t\tvideo.muted = this.dom.dataset.previewMuted === 'true' ? true : false;\n\t\t\tvideo.playsInline = true;\n\t\t\tvideo.src = url;\n\t\t\tcontentElement.appendChild( video );\n\n\t\t\tvideo.addEventListener( 'loadeddata', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\tvideo.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load video.</span>`;\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewvideo', data: { url } });\n\n\t\t}\n\t\telse {\n\t\t\tthrow new Error( 'Please specify a valid media type to preview' );\n\t\t}\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', ( event ) => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t}\n\n\tpreviewImage( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'image', fitMode );\n\n\t}\n\n\tpreviewVideo( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'video', fitMode );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\ttoggleHelp( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.showHelp() : this.close();\n\t\t}\n\t\telse {\n\t\t\tif( this.dom ) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tshowHelp() {\n\n\t\tif( this.Reveal.getConfig().help ) {\n\n\t\t\tthis.close();\n\n\t\t\tthis.createOverlay( 'r-overlay-help' );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p>';\n\n\t\t\tlet shortcuts = this.Reveal.keyboard.getShortcuts(),\n\t\t\t\tbindings = this.Reveal.keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tthis.viewport.innerHTML = `\n\t\t\t\t<header class=\"r-overlay-header\">\n\t\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t\t<div class=\"r-overlay-help-content\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\t\tthis.close();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'showhelp' });\n\n\t\t}\n\n\t}\n\n\tisOpen() {\n\n\t\treturn !!this.dom;\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tclose() {\n\n\t\tif( this.dom ) {\n\t\t\tthis.dom.remove();\n\t\t\tthis.dom = null;\n\n\t\t\tthis.state = {};\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'closeoverlay' });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetState() {\n\n\t\treturn this.state;\n\n\t}\n\n\tsetState( state ) {\n\n\t\t// Ignore the incoming state if none of the preview related\n\t\t// props have changed\n\t\tif( this.stateProps.every( key => this.state[ key ] === state[ key ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( state.previewIframe ) {\n\t\t\tthis.previewIframe( state.previewIframe );\n\t\t}\n\t\telse if( state.previewImage ) {\n\t\t\tthis.previewImage( state.previewImage, state.previewFit );\n\t\t}\n\t\telse if( state.previewVideo ) {\n\t\t\tthis.previewVideo( state.previewVideo, state.previewFit );\n\t\t}\n\t\telse {\n\t\t\tthis.close();\n\t\t}\n\n\t}\n\n\tonSlidesClicked( event ) {\n\n\t\tconst target = event.target;\n\n\t\tconst linkTarget = target.closest( this.iframeTriggerSelector );\n\t\tconst mediaTarget = target.closest( this.mediaTriggerSelector );\n\n\t\t// Was an iframe lightbox trigger clicked?\n\t\tif( linkTarget ) {\n\t\t\tif( event.metaKey || event.shiftKey || event.altKey ) {\n\t\t\t\t// Let the browser handle meta keys naturally so users can cmd+click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet url = linkTarget.getAttribute( 'href' ) || linkTarget.getAttribute( 'data-preview-link' );\n\t\t\tif( url ) {\n\t\t\t\tthis.previewIframe( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\t// Was a media lightbox trigger clicked?\n\t\telse if( mediaTarget ) {\n\t\t\tif( mediaTarget.hasAttribute( 'data-preview-image' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewImage || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewImage( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( mediaTarget.hasAttribute( 'data-preview-video' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewVideo || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( !url ) {\n\t\t\t\t\tlet source = mediaTarget.querySelector( 'source' );\n\t\t\t\t\tif( source ) {\n\t\t\t\t\t\turl = source.getAttribute( 'src' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewVideo( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.close();\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video[controls], audio[controls]' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\t// Media playback is only allowed as a direct result of a\n\t\t// user interaction. Some mobile devices do not consider a\n\t\t// 'touchmove' to be a direct user action. If this is the\n\t\t// case, we fall back to starting playback here instead.\n\t\tif( this.touchCaptured && this.Reveal.slideContent.isNotAllowedToPlay() ) {\n\t\t\tthis.Reveal.startEmbeddedContent( this.Reveal.getCurrentSlide() );\n\t\t}\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows.\n\t// - true: Display controls on all screens\n\t// - false: Hide controls on all screens\n\t// - \"speaker-only\": Only display controls in the speaker view\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when returning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Prevent embedded iframes from automatically focusing on themselves\n\tpreventIframeAutoFocus: true,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Overlay from './controllers/overlay.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.2.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if initialize() has been invoked for this reveal instance\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\toverlay = new Overlay( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\tif( initialized ) throw 'Reveal.js has already been initialized.';\n\n\t\tinitialized = true;\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Don't proceed if this instance has been destroyed\n\t\tif( initialized === false ) return;\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent.trim();\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\t// Capture alt text from img and video elements\n\t\t\t\tif( node.tagName === 'IMG' || node.tagName === 'VIDEO' ) {\n\t\t\t\t\tlet altText = node.getAttribute( 'alt' );\n\t\t\t\t\tif( altText ) {\n\t\t\t\t\t\ttext += ensurePunctuation( altText );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t\t// Add period after block-level text elements to improve\n\t\t\t\t// screen reader experience\n\t\t\t\tconst textElements = ['P', 'DIV', 'UL', 'OL', 'LI', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'BLOCKQUOTE'];\n\t\t\t\tif( textElements.includes( node.tagName ) && text.trim() !== '' ) {\n\t\t\t\t\ttext = ensurePunctuation( text );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * Ensures text ends with proper punctuation by adding a period\n\t * if it doesn't already end with punctuation.\n\t */\n\tfunction ensurePunctuation( text ) {\n\n\t\tconst trimmedText = text.trim();\n\n\t\tif( trimmedText === '' ) {\n\t\t\treturn text;\n\t\t}\n\n\t\treturn !/[.!?]$/.test(trimmedText) ? trimmedText + '.' : trimmedText;\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tinitialized = false;\n\n\t\t// There's nothing to destroy if this instance hasn't finished\n\t\t// initializing\n\t\tif( ready === false ) return;\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\toverlay.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presentation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Indicate when we're on a vertical slide\n\t\trevealElement.classList.toggle( 'is-vertical-slide', currentVerticalSlides.length > 1 );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\toverlay.update();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\tconst isOverview = overview.isActive();\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = isOverview ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = isOverview ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = isOverview ? 0 : getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive(),\n\t\t\t...overlay.getState()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\n\t\t\toverlay.setState( state );\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse if( config.rtl ) {\n\t\t\t\t\tnavigateRight({skipFragments});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: overlay.toggleHelp.bind( overlay ),\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisOverlayOpen: overlay.isOpen.bind( overlay ),\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Start/stop all media inside of the current slide\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Lightbox previews\n\t\tpreviewIframe: overlay.previewIframe.bind( overlay ),\n\t\tpreviewImage: overlay.previewImage.bind( overlay ),\n\t\tpreviewVideo: overlay.previewVideo.bind( overlay ),\n\n\t\tshowPreview: overlay.previewIframe.bind( overlay ), // deprecated in favor of showIframeLightbox\n\t\thidePreview: overlay.close.bind( overlay ),\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tkeyboard,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay: overlay.close.bind( overlay ),\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","enterFullscreen","requestMethod","document","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","apply","createStyleSheet","tag","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","allowedToPlay","constructor","Reveal","this","startEmbeddedIframe","bind","preventIframeAutoFocus","ensureMobileMediaPlaying","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","displayValue","includes","trim","setProperty","isIframe","tagName","setAttribute","getAttribute","removeAttribute","addEventListener","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","video","isSpeakerNotes","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","isSpeakerNotesWindow","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","then","removeEventListener","event","getVideoPlaybackQuality","playing","paused","totalFrames","totalVideoFrames","isAttachedToDOM","isVisible","ended","currentTime","error","name","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","isNotAllowedToPlay","console","log","elapsed","interval","maxTime","checkFocus","activeElement","blur","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","previousBackgroundHash","currentBackgroundHash","currentVideo","previousVideo","currentVideoParent","backgroundChanged","slideContent","currentBackgroundContent","backgroundImageURL","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isOverlayOpen","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","togglePause","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","toggleHelp","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","bits","hashIndexBase","hashOneBasedIndex","decodedName","decodeURIComponent","getElementById","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","onEnterFullscreen","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsFullscreen","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","hasVerticalSiblings","parentElement","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","viewport","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Overlay","onSlidesClicked","iframeTriggerSelector","mediaTriggerSelector","stateProps","previewLinks","hasLinkPreviews","hasMediaPreviews","createOverlay","dom","previewIframe","close","previewMedia","mediaType","fitMode","previewFit","previewImage","img","previewVideo","previewAutoplay","previewControls","loop","previewLoop","previewMuted","playsInline","showHelp","help","html","isOpen","every","linkTarget","mediaTarget","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","Notes","updateVisibility","hasNotes","notesElements","Playback","progressCheck","diameter","diameter2","thickness","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","shuffle","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","initialized","ready","navigationHistory","slidesTransform","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","overlay","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","altText","ensurePunctuation","child","trimmedText","isReady","numberOfSlides","resume","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","isOverview","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","loadSlide","unloadSlide","showPreview","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}