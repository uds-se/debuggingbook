<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 14.0.2 (20251019.1705)
 -->
<!-- Pages: 1 -->
<svg width="484pt" height="556pt"
 viewBox="0.00 0.00 484.00 556.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 551.5)">
<g id="a_graph0"><a xlink:title="TypeAnnotator class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-551.5 479.62,-551.5 479.62,4 -4,4"/>
</a>
</g>
<!-- TypeAnnotator -->
<g id="node1" class="node">
<title>TypeAnnotator</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class TypeAnnotator:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="0,-6.88 0,-103.88 142,-103.88 142,-6.88 0,-6.88"/>
<text xml:space="preserve" text-anchor="start" x="21.12" y="-87.58" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TypeAnnotator</text>
<polyline fill="none" stroke="black" points="0,-78.62 142,-78.62"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="TypeAnnotator">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;String representation, like `typed_functions()`">
<text xml:space="preserve" text-anchor="start" x="8" y="-66.12" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="typed_function(self, function_name: str) &#45;&gt; str:&#10;Return the code for all calls of `function_name` observed, annotated with types">
<text xml:space="preserve" text-anchor="start" x="8" y="-53.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_function()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="typed_function_ast(self, function_name: str) &#45;&gt; Optional[ast.AST]:&#10;Return an AST for all calls of `function_name` observed, annotated with types">
<text xml:space="preserve" text-anchor="start" x="8" y="-40.62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_function_ast()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="typed_functions(self) &#45;&gt; str:&#10;Return the code for all functions observed, annotated with types">
<text xml:space="preserve" text-anchor="start" x="8" y="-27.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_functions()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="typed_functions_ast(self) &#45;&gt; Dict[str, ast.AST]:&#10;Return a dict name &#45;&gt; AST for all functions observed, annotated with types">
<text xml:space="preserve" text-anchor="start" x="8" y="-15.12" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">typed_functions_ast()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TypeTracer -->
<g id="node2" class="node">
<title>TypeTracer</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class TypeTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="53.88,-165 53.88,-201 144.12,-201 144.12,-165 53.88,-165"/>
<text xml:space="preserve" text-anchor="start" x="61.88" y="-179.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TypeTracer</text>
</a>
</g>
</g>
<!-- TypeAnnotator&#45;&gt;TypeTracer -->
<g id="edge1" class="edge">
<title>TypeAnnotator&#45;&gt;TypeTracer</title>
<path fill="none" stroke="black" d="M81.67,-104.23C85.4,-120.97 89.46,-139.22 92.72,-153.83"/>
<polygon fill="none" stroke="black" points="89.22,-154.19 94.81,-163.19 96.05,-152.67 89.22,-154.19"/>
</g>
<!-- CallTracer -->
<g id="node3" class="node">
<title>CallTracer</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class CallTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="109,-255.75 109,-391 209,-391 209,-255.75 109,-255.75"/>
<text xml:space="preserve" text-anchor="start" x="124.5" y="-374.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CallTracer</text>
<polyline fill="none" stroke="black" points="109,-365.75 209,-365.75"/>
<g id="a_node3_6"><a xlink:href="#" xlink:title="CallTracer">
<g id="a_node3_7"><a xlink:href="#" xlink:title="__init__(self, log: bool = False, **kwargs: Any) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text xml:space="preserve" text-anchor="start" x="117" y="-353.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node3_8"><a xlink:href="#" xlink:title="add_call(self, function_name: str, arguments: List[Tuple[str, Any]], return_value: Any = None) &#45;&gt; None:&#10;Add given call to list of calls">
<text xml:space="preserve" text-anchor="start" x="117" y="-339.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">add_call()</text>
</a>
</g>
<g id="a_node3_9"><a xlink:href="#" xlink:title="all_calls(self) &#45;&gt; Dict[str, List[Tuple[List[Tuple[str, Any]], Any]]]:&#10;Return list of calls for function_name,&#10;or a mapping function_name &#45;&gt; calls for all functions tracked">
<text xml:space="preserve" text-anchor="start" x="117" y="-326.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">all_calls()</text>
</a>
</g>
<g id="a_node3_10"><a xlink:href="#" xlink:title="calls(self, function_name: str) &#45;&gt; List[Tuple[List[Tuple[str, Any]], Any]]:&#10;Return list of calls for `function_name`.">
<text xml:space="preserve" text-anchor="start" x="117" y="-314" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">calls()</text>
</a>
</g>
<g id="a_node3_11"><a xlink:href="#" xlink:title="reset(self) &#45;&gt; None">
<text xml:space="preserve" text-anchor="start" x="117" y="-301.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">reset()</text>
</a>
</g>
<g id="a_node3_12"><a xlink:href="#" xlink:title="trace_call(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Save current function name and args on the stack">
<text xml:space="preserve" text-anchor="start" x="117" y="-288.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">trace_call()</text>
</a>
</g>
<g id="a_node3_13"><a xlink:href="#" xlink:title="trace_return(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Get return value and store complete call with arguments and return value">
<text xml:space="preserve" text-anchor="start" x="117" y="-275.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">trace_return()</text>
</a>
</g>
<g id="a_node3_14"><a xlink:href="#" xlink:title="traceit(self, frame: frame, event: str, arg: Any) &#45;&gt; None:&#10;Tracking function: Record all calls and all args">
<text xml:space="preserve" text-anchor="start" x="117" y="-264" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">traceit()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TypeTracer&#45;&gt;CallTracer -->
<g id="edge2" class="edge">
<title>TypeTracer&#45;&gt;CallTracer</title>
<path fill="none" stroke="black" d="M106.48,-201.25C111.45,-212.7 118.36,-228.64 125.54,-245.2"/>
<polygon fill="none" stroke="black" points="122.24,-246.39 129.43,-254.17 128.66,-243.6 122.24,-246.39"/>
</g>
<!-- Tracer -->
<g id="node4" class="node">
<title>Tracer</title>
<g id="a_node4"><a xlink:href="Tracer.ipynb" xlink:title="class Tracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="129.62,-428 129.62,-464 188.38,-464 188.38,-428 129.62,-428"/>
<text xml:space="preserve" text-anchor="start" x="137.62" y="-442.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">Tracer</text>
</a>
</g>
</g>
<!-- CallTracer&#45;&gt;Tracer -->
<g id="edge3" class="edge">
<title>CallTracer&#45;&gt;Tracer</title>
<path fill="none" stroke="black" d="M159,-391.39C159,-400.11 159,-408.64 159,-416.24"/>
<polygon fill="none" stroke="black" points="155.5,-416.15 159,-426.15 162.5,-416.15 155.5,-416.15"/>
</g>
<!-- StackInspector -->
<g id="node5" class="node">
<title>StackInspector</title>
<g id="a_node5"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="black" points="76,-501 76,-547 242,-547 242,-501 76,-501"/>
<text xml:space="preserve" text-anchor="start" x="108.75" y="-530.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="black" points="76,-521.75 242,-521.75"/>
<g id="a_node5_15"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node5_16"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {}">
<text xml:space="preserve" text-anchor="start" x="84" y="-508.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_generated_function_cache</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Tracer&#45;&gt;StackInspector -->
<g id="edge4" class="edge">
<title>Tracer&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M159,-464.25C159,-471.65 159,-480.58 159,-489.21"/>
<polygon fill="none" stroke="black" points="155.5,-489.11 159,-499.11 162.5,-489.11 155.5,-489.11"/>
</g>
<!-- InvariantAnnotator -->
<g id="node6" class="node">
<title>InvariantAnnotator</title>
<g id="a_node6"><a xlink:href="#" xlink:title="class InvariantAnnotator:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="160,-0.5 160,-110.25 338,-110.25 338,-0.5 160,-0.5"/>
<text xml:space="preserve" text-anchor="start" x="186.38" y="-93.95" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">InvariantAnnotator</text>
<polyline fill="none" stroke="black" points="160,-85 338,-85"/>
<g id="a_node6_17"><a xlink:href="#" xlink:title="InvariantAnnotator">
<g id="a_node6_18"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;String representation, like `functions_with_invariants()`">
<text xml:space="preserve" text-anchor="start" x="168" y="-72.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node6_19"><a xlink:href="#" xlink:title="function_with_invariants(self, function_name: str) &#45;&gt; str:&#10;Return the code of `function_name`, annotated with invariants">
<text xml:space="preserve" text-anchor="start" x="168" y="-59.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">function_with_invariants()</text>
</a>
</g>
<g id="a_node6_20"><a xlink:href="#" xlink:title="functions_with_invariants(self) &#45;&gt; str:&#10;Return the code of all observed functions, annotated with invariants">
<text xml:space="preserve" text-anchor="start" x="168" y="-47" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">functions_with_invariants()</text>
</a>
</g>
<g id="a_node6_21"><a xlink:href="#" xlink:title="postconditions(self, function_name: str) &#45;&gt; List[str]:&#10;Return a list of mined postconditions for `function_name`">
<text xml:space="preserve" text-anchor="start" x="168" y="-34.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">postconditions()</text>
</a>
</g>
<g id="a_node6_22"><a xlink:href="#" xlink:title="preconditions(self, function_name: str) &#45;&gt; List[str]:&#10;Return a list of mined preconditions for `function_name`">
<text xml:space="preserve" text-anchor="start" x="168" y="-21.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">preconditions()</text>
</a>
</g>
<g id="a_node6_23"><a xlink:href="#" xlink:title="params(self, function_name: str) &#45;&gt; str">
<text xml:space="preserve" text-anchor="start" x="168" y="-7.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">params()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- InvariantTracer -->
<g id="node7" class="node">
<title>InvariantTracer</title>
<g id="a_node7"><a xlink:href="#" xlink:title="class InvariantTracer:&#10;A class for tracing a piece of code. Use as `with Tracer(): block()`">
<polygon fill="none" stroke="black" points="175.75,-147.25 175.75,-218.75 292.25,-218.75 292.25,-147.25 175.75,-147.25"/>
<text xml:space="preserve" text-anchor="start" x="183.75" y="-202.45" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">InvariantTracer</text>
<polyline fill="none" stroke="black" points="175.75,-193.5 292.25,-193.5"/>
<g id="a_node7_24"><a xlink:href="#" xlink:title="InvariantTracer">
<g id="a_node7_25"><a xlink:href="#" xlink:title="__init__(self, props: Optional[List[str]] = None, **kwargs: Any) &#45;&gt; None:&#10;Create a new tracer.&#10;If `file` is given, output to `file` instead of stdout.">
<text xml:space="preserve" text-anchor="start" x="186" y="-181" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node7_26"><a xlink:href="#" xlink:title="all_invariants(self) &#45;&gt; Dict[str, Set[Tuple[str, Tuple[str, ...]]]]">
<text xml:space="preserve" text-anchor="start" x="186" y="-167.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">all_invariants()</text>
</a>
</g>
<g id="a_node7_27"><a xlink:href="#" xlink:title="invariants(self, function_name: str) &#45;&gt; Set[Tuple[str, Tuple[str, ...]]]">
<text xml:space="preserve" text-anchor="start" x="186" y="-154.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">invariants()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- InvariantAnnotator&#45;&gt;InvariantTracer -->
<g id="edge5" class="edge">
<title>InvariantAnnotator&#45;&gt;InvariantTracer</title>
<path fill="none" stroke="black" d="M242.51,-110.75C241.53,-118.94 240.53,-127.34 239.57,-135.35"/>
<polygon fill="none" stroke="black" points="236.1,-134.91 238.39,-145.26 243.05,-135.74 236.1,-134.91"/>
</g>
<!-- InvariantTracer&#45;&gt;CallTracer -->
<g id="edge6" class="edge">
<title>InvariantTracer&#45;&gt;CallTracer</title>
<path fill="none" stroke="black" d="M215.07,-218.92C210.64,-227.09 205.75,-236.12 200.76,-245.33"/>
<polygon fill="none" stroke="black" points="197.73,-243.58 196.04,-254.04 203.88,-246.92 197.73,-243.58"/>
</g>
<!-- Legend -->
<g id="node8" class="node">
<title>Legend</title>
<text xml:space="preserve" text-anchor="start" x="356.38" y="-71.38" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text xml:space="preserve" text-anchor="start" x="356.38" y="-61.38" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="362.38" y="-61.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text xml:space="preserve" text-anchor="start" x="356.38" y="-51.38" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="362.38" y="-51.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text xml:space="preserve" text-anchor="start" x="356.38" y="-41.38" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="362.38" y="-41.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text xml:space="preserve" text-anchor="start" x="356.38" y="-32.33" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
