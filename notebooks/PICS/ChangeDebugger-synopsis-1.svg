<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 14.0.2 (20251019.1705)
 -->
<!-- Pages: 1 -->
<svg width="296pt" height="400pt"
 viewBox="0.00 0.00 296.00 400.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 395.5)">
<g id="a_graph0"><a xlink:title="ChangeDebugger class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-395.5 291.62,-395.5 291.62,4 -4,4"/>
</a>
</g>
<!-- ChangeDebugger -->
<g id="node1" class="node">
<title>ChangeDebugger</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class ChangeDebugger:&#10;Collect an exception&#45;raising function call f().&#10;Use as `with CallCollector(): f()`">
<polygon fill="none" stroke="black" points="15.38,-0.5 15.38,-148.5 150.62,-148.5 150.62,-0.5 15.38,-0.5"/>
<text xml:space="preserve" text-anchor="start" x="23.38" y="-132.2" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">ChangeDebugger</text>
<polyline fill="none" stroke="black" points="15.38,-123.25 150.62,-123.25"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="ChangeDebugger">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Called at begin of a `with` block. Checks if current source fails.">
<text xml:space="preserve" text-anchor="start" x="29" y="-110.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__enter__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="__init__(self, pass_source: str, fail_source: str, **ddargs: Any) &#45;&gt; None:&#10;Constructor. Takes a passing source file (`pass_source`)&#10;and a failing source file (`fail_source`).&#10;Additional arguments are passed to `DeltaDebugger` constructor.">
<text xml:space="preserve" text-anchor="start" x="29" y="-98" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Return readable list of minimal patches">
<text xml:space="preserve" text-anchor="start" x="29" y="-85.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="fail_source(self) &#45;&gt; str:&#10;Return the failing source file.">
<text xml:space="preserve" text-anchor="start" x="29" y="-72.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">fail_source()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="min_patches(self) &#45;&gt; Tuple[List[diff_match_patch.diff_match_patch.patch_obj], List[diff_match_patch.diff_match_patch.patch_obj], List[diff_match_patch.diff_match_patch.patch_obj]]:&#10;Compute a minimal set of patches.&#10;Returns a triple (`pass_patches`, `fail_patches`, `diff_patches`)&#10;where `diff_patches` is the minimal difference between&#10;the set `pass_patches` (which, when applied, make the test pass) and&#10;the set `fail_patches` (which, when applied, make the test fail).">
<text xml:space="preserve" text-anchor="start" x="29" y="-59.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">min_patches()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="pass_source(self) &#45;&gt; str:&#10;Return the passing source file.">
<text xml:space="preserve" text-anchor="start" x="29" y="-47" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">pass_source()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="patches(self) &#45;&gt; List[diff_match_patch.diff_match_patch.patch_obj]:&#10;Return the diff between passing and failing source files.">
<text xml:space="preserve" text-anchor="start" x="29" y="-34.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">patches()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="after_collection(self) &#45;&gt; None:&#10;Diagnostics.">
<text xml:space="preserve" text-anchor="start" x="29" y="-21.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">after_collection()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="test_patches(self, patches: List[diff_match_patch.diff_match_patch.patch_obj]) &#45;&gt; None">
<text xml:space="preserve" text-anchor="start" x="29" y="-7.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">test_patches()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CallCollector -->
<g id="node2" class="node">
<title>CallCollector</title>
<g id="a_node2"><a xlink:href="DeltaDebugger.ipynb" xlink:title="class CallCollector:&#10;Collect an exception&#45;raising function call f().&#10;Use as `with CallCollector(): f()`">
<polygon fill="none" stroke="black" points="30.38,-185.5 30.38,-308 135.62,-308 135.62,-185.5 30.38,-185.5"/>
<text xml:space="preserve" text-anchor="start" x="38.38" y="-291.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">CallCollector</text>
<polyline fill="none" stroke="black" points="30.38,-282.75 135.62,-282.75"/>
<g id="a_node2_10"><a xlink:href="#" xlink:title="CallCollector">
<g id="a_node2_11"><a xlink:href="DeltaDebugger.ipynb" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Called at begin of `with` block. Turn tracing on.">
<text xml:space="preserve" text-anchor="start" x="50" y="-270.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__enter__()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="DeltaDebugger.ipynb" xlink:title="__exit__(self, exc_tp: Type, exc_value: BaseException, exc_traceback: traceback) &#45;&gt; Optional[bool]:&#10;Called at end of `with` block. Turn tracing off.">
<text xml:space="preserve" text-anchor="start" x="50" y="-257.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__exit__()</text>
</a>
</g>
<g id="a_node2_13"><a xlink:href="DeltaDebugger.ipynb" xlink:title="__init__(self) &#45;&gt; None:&#10;Initialize collector">
<text xml:space="preserve" text-anchor="start" x="50" y="-244.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node2_14"><a xlink:href="DeltaDebugger.ipynb" xlink:title="args(self) &#45;&gt; Dict[str, Any]:&#10;Return the dictionary of collected arguments.">
<text xml:space="preserve" text-anchor="start" x="50" y="-232" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">args()</text>
</a>
</g>
<g id="a_node2_15"><a xlink:href="DeltaDebugger.ipynb" xlink:title="call(self, new_args: Optional[Dict[str, Any]] = None) &#45;&gt; Any:&#10;Call collected function. If `new_args` is given,&#10;override arguments from its {var: value} entries.">
<text xml:space="preserve" text-anchor="start" x="50" y="-219.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">call()</text>
</a>
</g>
<g id="a_node2_16"><a xlink:href="DeltaDebugger.ipynb" xlink:title="exception(self) &#45;&gt; Optional[BaseException]:&#10;Return the exception produced, or `None` if none.">
<text xml:space="preserve" text-anchor="start" x="50" y="-206.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">exception()</text>
</a>
</g>
<g id="a_node2_17"><a xlink:href="DeltaDebugger.ipynb" xlink:title="function(self) &#45;&gt; Callable:&#10;Return the function called.">
<text xml:space="preserve" text-anchor="start" x="50" y="-193.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">function()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- ChangeDebugger&#45;&gt;CallCollector -->
<g id="edge1" class="edge">
<title>ChangeDebugger&#45;&gt;CallCollector</title>
<path fill="none" stroke="black" d="M83,-148.69C83,-157.05 83,-165.58 83,-173.92"/>
<polygon fill="none" stroke="black" points="79.5,-173.65 83,-183.65 86.5,-173.65 79.5,-173.65"/>
</g>
<!-- StackInspector -->
<g id="node3" class="node">
<title>StackInspector</title>
<g id="a_node3"><a xlink:href="StackInspector.ipynb" xlink:title="class StackInspector:&#10;Provide functions to inspect the stack">
<polygon fill="none" stroke="black" points="0,-345 0,-391 166,-391 166,-345 0,-345"/>
<text xml:space="preserve" text-anchor="start" x="32.75" y="-374.7" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">StackInspector</text>
<polyline fill="none" stroke="black" points="0,-365.75 166,-365.75"/>
<g id="a_node3_18"><a xlink:href="#" xlink:title="StackInspector">
<g id="a_node3_19"><a xlink:href="StackInspector.ipynb" xlink:title="_generated_function_cache = {(&#39;test_patches&#39;, 2): &lt;function ChangeDebugger.test_patches&gt;}">
<text xml:space="preserve" text-anchor="start" x="8" y="-352.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_generated_function_cache</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- CallCollector&#45;&gt;StackInspector -->
<g id="edge2" class="edge">
<title>CallCollector&#45;&gt;StackInspector</title>
<path fill="none" stroke="black" d="M83,-308.42C83,-317.06 83,-325.66 83,-333.52"/>
<polygon fill="none" stroke="black" points="79.5,-333.25 83,-343.25 86.5,-333.25 79.5,-333.25"/>
</g>
<!-- Legend -->
<g id="node4" class="node">
<title>Legend</title>
<text xml:space="preserve" text-anchor="start" x="168.38" y="-90.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text xml:space="preserve" text-anchor="start" x="168.38" y="-80.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="174.38" y="-80.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text xml:space="preserve" text-anchor="start" x="168.38" y="-70.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="174.38" y="-70.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text xml:space="preserve" text-anchor="start" x="168.38" y="-60.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="174.38" y="-60.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text xml:space="preserve" text-anchor="start" x="168.38" y="-51.45" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
